#include<bits/stdc++.h>
using namespace std;
char maps[333][333];
int qs[333][333],qt[333][333],Pow[333];
int main()
{
    int i,j,k,r,c,mid,fst,lst,w,l,fu,fk,mc=-1;
    scanf("%d %d",&r,&c);
    for(i=1;i<=r;i++)
    {
        scanf("%s",maps[i]+1);
        for(j=1;j<=c;j++)
            maps[i][j]-='0';
    }
    Pow[0]=1;
    for(i=1;i<=305;i++)
    {
        Pow[i]=Pow[i-1]*37;
    }
    for(i=1;i<=r;i++)
    {
        k=0;
        for(j=1;j<=c;j++)
        {
            k*=37;
            k+=maps[i][j];
            qs[i][j]=k;
        }
        k=0;
        for(j=c;j>=1;j--)
        {
            k*=37;
            k+=maps[i][j];
            qt[i][j]=k;
        }
    }
    fst=1;lst=min(r,c)/2;
    while(fst<=lst)
    {
        mid=(fst+lst)/2;
        w=mid*2;
        fu=0;
        for(i=1;i<=r-w+1;i++)
        {
            for(j=1;j<=c-w+1;j++)
            {
                fk=0;
                for(k=0;k<w/2;k++)
                {
                    if(qs[i+k][j+w-1]-Pow[w]*qs[i+k][j-1]!=qt[i+w-k-1][j]-Pow[w]*qt[i+w-k-1][j+w])
                    {
                        fk=1;
                        break;
                    }
                }
                if(fk==0)
                {
                    fu=1;
                    break;
                }
            }
        }
        if(fu==1)
        {
            mc=max(mc,w);
            fst=mid+1;
        }
        else
            lst=mid-1;
    }
    fst=1;lst=(min(r,c)-1)/2;
    while(fst<=lst)
    {
        mid=(fst+lst)/2;
        w=mid*2+1;
        fu=0;
        for(i=1;i<=r-w+1;i++)
        {
            for(j=1;j<=c-w+1;j++)
            {
                fk=0;
                for(k=0;k<w/2;k++)
                {
                    if(qs[i+k][j+w-1]-Pow[w]*qs[i+k][j-1]!=qt[i+w-k-1][j]-Pow[w]*qt[i+w-k-1][j+w])
                    {
                        fk=1;
                        break;
                    }
                }
                if(qs[i+w/2][j+w-1]-Pow[w]*qs[i+w/2][j-1]!=qt[i+w/2][j]-Pow[w]*qt[i+w/2][j+w])
                    fk=1;
                if(fk==0)
                {
                    fu=1;
                    break;
                }
            }
        }
        if(fu==1)
        {
            mc=max(mc,w);
            fst=mid+1;
        }
        else
            lst=mid-1;
    }
    printf("%d",mc);
}
